%py_setup setup.py
%py_shbang_opts -s

# (proyvind): If specified, -v argument specifies which python version,
#             must be 2 or 3. Otherwise if not specified, use default.
%py_setup_run(v:) %{expand:\
%{-v:%global orig__python %{__python} \
%global __python %{__python%{-v*}}} \
%{lua:if rpm.expand("%{py_ver}") >= "3.0" then rpm.define("py_smp %{_smp_mflags}"); end} \
ln -snf build.%{py_ver} build ; \
%setup_compile_flags \
%{__python} %{py_setup} %{?py_setup_args} %{?*} \
%{-v:%global __python %{orig__python}} \
%unglobal py_smp \
%unglobal py_setup_args}

%py_build(v:) \
%global py_setup_args build %%{?py_smp} --build-base=build.%%{py_ver} --executable="%%{__python} %{?py_shbang_opts}%{?!py_shbang_opts:-s}" \
%{expand:%py_setup_run %%{?*}}

%py_install(v:) \
%global py_setup_args install --skip-build --root %{buildroot} \
%{expand:%py_setup_run %%{?*}}

%py_test(v:) \
%global py_setup_args test \
%{expand:%py_setup_run %%{?*}}

%python_provide() %{lua:\
        function string.starts(String,Start)\
                return string.sub(String,1,string.len(Start))==Start\
        end\
        package = rpm.expand("%{?1:%{1}}");\
        vr = rpm.expand("%{?epoch:%{epoch}:}%{version}-%{release}")
        if (string.starts(package, "python2-")) then\
                if (rpm.expand("%{?buildarch}") ~= "noarch") then\
                        str = "Provides: python-" .. string.sub(package,9,string.len(package)) .. "%{?_isa} = " .. vr;\
                        print(rpm.expand(str));\
                end\
                print("\\nProvides: python-");\
                print(string.sub(package,9,string.len(package)));\
                print(" = ");\
                print(vr);\
                --Obsoleting the previous default python package\
                if (rpm.expand("%{?buildarch}") ~= "noarch") then\
                        str = "\\nObsoletes: python-" .. string.sub(package,9,string.len(package)) .. "%{?_isa} < " .. vr;\
                        print(rpm.expand(str));\
                end\
                print("\\nObsoletes: python-");\
                print(string.sub(package,9,string.len(package)));\
                print(" < ");\
                print(vr);\
        elseif (string.starts(package, "python" .. rpm.expand("%{python3_pkgversion}") .. "-")) then\
                --No unversioned provides as python3 is not default\
        elseif (rpm.expand("%{?python3_other_pkgversion}") ~= "" and string.starts(package, "python" .. rpm.expand("%{python3_other_pkgversion}") .. "-")) then\
                --No unversioned provides as python3_other is not default\
        elseif (string.starts(package, "pypy-")) then\
                --No unversioned provides as pypy is not default\
        elseif (string.starts(package, "pypy3-")) then\
                --No unversioned provides as pypy is not default\
        elseif (string.starts(package, "python-")) then\
                --Providing the current default python\
                print("Provides: python2-");\
                print(string.sub(package,8,string.len(package)));\
                print(" = ");\
                print(vr);\
        else\
                print("%python_provide: ERROR: ");\
                print(package);\
                print(" not recognized.");\
        end\
}
